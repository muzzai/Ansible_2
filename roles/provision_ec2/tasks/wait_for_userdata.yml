---
- name: Create a temporary file for the private key
  ansible.builtin.tempfile:
    state: file
    suffix: .pem
  register: temp_private_key
  delegate_to: localhost

- name: Write private key to the temporary file
  ansible.builtin.copy:
    content: |
      {{ ec2_keypair_info.private_key }}
    dest: "{{ temp_private_key.path }}"
    mode: '0600'
  delegate_to: localhost

- name: Read local file content
  ansible.builtin.debug:
    msg: "Content of local_file.txt: {{ lookup('ansible.builtin.file', temp_private_key.path) }}"

- name: Wait for SSH port to be open
  ansible.builtin.wait_for:
    host: "{{ ec2_instance_info.public_ip }}"
    port: 22
    delay: 15
    timeout: 300
  delegate_to: localhost

- name: Wait for user data script to complete (trying with cmd)
  vars:
    ansible_user: "{{ windows_admin_user }}"
    ansible_ssh_private_key_file: "{{ hostvars['localhost'].temp_private_key.path }}"
    ansible_connection: ssh
    ansible_shell_type: cmd
    ansible_ssh_common_args: >-
      -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PasswordAuthentication=no
  ansible.windows.win_stat:
    path: C:\debug\user_data_result.log
  register: user_data_status_cmd
  until: user_data_status_cmd.stat.exists
  retries: 10
  delay: 15
  delegate_to: "{{ ec2_instance_info.public_ip }}"
  ignore_errors: true

- name: Wait for user data script to complete (falling back to powershell)
  vars:
    ansible_user: "{{ windows_admin_user }}"
    ansible_ssh_private_key_file: "{{ hostvars['localhost'].temp_private_key.path }}"
    ansible_connection: ssh
    ansible_shell_type: powershell
    ansible_ssh_common_args: >-
      -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PasswordAuthentication=no
  ansible.windows.win_stat:
    path: C:\debug\user_data_result.log
  register: user_data_status_ps
  until: user_data_status_ps.stat.exists
  retries: 10
  delay: 15
  delegate_to: "{{ ec2_instance_info.public_ip }}"
  when: user_data_status_cmd is failed

- name: Add the new instance to an in-memory inventory group
  ansible.builtin.add_host:
    name: "{{ ec2_instance_info.public_ip }}"
    groups: provisioned_ec2
    ansible_user: "{{ windows_admin_user }}"
    ansible_ssh_private_key_file: "{{ hostvars['localhost'].temp_private_key.path }}"
    ansible_shell_type: powershell
    ansible_connection: ssh
    ansible_ssh_common_args: >-
      -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PasswordAuthentication=no -o PreferredAuthentications=publickey -vvv