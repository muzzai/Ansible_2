---
# Manage EC2 key pair for SSH access and publish facts for later tasks

- name: Expand local SSH key paths
  set_fact:
    provision_private_key_path_expanded: "{{ provision_private_key_path | regex_replace('^~', lookup('env', 'HOME')) }}"
    provision_public_key_path_expanded: "{{ provision_public_key_path | regex_replace('^~', lookup('env', 'HOME')) }}"

- name: Determine SSH key directory path
  set_fact:
    provision_private_key_dir: "{{ provision_private_key_path_expanded | regex_replace('^(.*)[/\\\\][^/\\\\]+$', '\\1') }}"

- name: Prepare SSH key material on control host
  delegate_to: "{{ provision_control_host }}"
  run_once: true
  block:
    - name: Ensure SSH key directory exists
      ansible.builtin.file:
        path: "{{ provision_private_key_dir }}"
        state: directory
        mode: '0700'

    - name: Ensure SSH key pair exists locally
      community.crypto.openssh_keypair:
        path: "{{ provision_private_key_path_expanded }}"
        type: "{{ ec2_ssh_key_type }}"
        size: "{{ ec2_ssh_key_bits }}"
        comment: "ansible-generated-{{ ec2_key_name }}"
        private_key_format: pem
        public_key_path: "{{ provision_public_key_path_expanded }}"
      register: provision_local_keypair

    - name: Read SSH key material
      ansible.builtin.slurp:
        src: "{{ item }}"
      loop:
        - "{{ provision_private_key_path_expanded }}"
        - "{{ provision_public_key_path_expanded }}"
      register: provision_key_material

- name: Assemble key pair facts
  set_fact:
    ec2_keypair_info:
      key_name: "{{ ec2_key_name }}"
      key_fingerprint: "{{ provision_local_keypair.fingerprint | default('') }}"
      private_key: "{{ provision_key_material.results
        | selectattr('item', 'equalto', provision_private_key_path_expanded)
        | map(attribute='content')
        | list
        | first
        | default('')
        | b64decode }}"
      public_key: "{{ provision_key_material.results
        | selectattr('item', 'equalto', provision_public_key_path_expanded)
        | map(attribute='content')
        | list
        | first
        | default('')
        | b64decode }}"
      key_type: "{{ ec2_ssh_key_type }}"
      key_bits: "{{ ec2_ssh_key_bits }}"

- name: Import key pair into AWS
  amazon.aws.ec2_key:
    name: "{{ ec2_key_name }}"
    key_material: "{{ ec2_keypair_info.public_key }}"
    state: present
    region: "{{ aws_region }}"
    tags:
      Name: "{{ ec2_key_name }}"
      Environment: "{{ ec2_environment }}"
      Project: "{{ ec2_project }}"
      ManagedBy: ansible
      CreatedBy: "{{ ansible_user | default('ansible') }}"
      CreatedAt: "{{ ansible_date_time.iso8601 }}"
  register: ec2_keypair_result
  delegate_to: "{{ provision_control_host }}"
  run_once: true

- name: Backfill fingerprint from AWS response when available
  set_fact:
    ec2_keypair_info: "{{ ec2_keypair_info | combine({'key_fingerprint': ec2_keypair_result.key.fingerprint}, recursive=True) }}"
  when: ec2_keypair_result.key is defined and ec2_keypair_result.key.fingerprint is defined

- name: Show key pair status
  ansible.builtin.debug:
    msg:
      - "EC2 key pair: {{ ec2_key_name }}"
      - "Fingerprint: {{ ec2_keypair_info.key_fingerprint | default('N/A') }}"
      - "Public key length: {{ ec2_keypair_info.public_key | length }}"
      - "Key ready for instance launch"
